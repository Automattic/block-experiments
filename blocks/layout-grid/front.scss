/**
 * Grid Block styles.
 * These styles are loaded into both the editor, and the frontend.
 */

@import './constants.scss';

/**
 * Responsive Grid Options
 */

/* autoprefixer grid: no-autoplace */
.wp-block-jetpack-layout-grid {
	display: grid;
	grid-gap: $grid-gutter;

	// Default to mobile
	grid-template-columns: $grid-mobile;

	// Tablet grid rules.
	@media (min-width: #{ ($break-small) }) {
		grid-template-columns: $grid-tablet;
	}

	// Desktop grid rules.
	@media (min-width: #{ ($break-xlarge) }) {
		grid-template-columns: $grid-desktop;
	}

	// Ensure long lines wrap in themes that don't already enforce this
	.wp-block-jetpack-layout-grid-column * {
		word-break: break-word;
		word-wrap: break-word;
	}

	&.wp-block-jetpack-layout-gutter__none {
		grid-gap: $grid-gutter-none;
	}

	&.wp-block-jetpack-layout-gutter__small {
		grid-gap: $grid-gutter-small;
	}

	&.wp-block-jetpack-layout-gutter__medium {
		grid-gap: $grid-gutter-medium;
	}

	&.wp-block-jetpack-layout-gutter__huge {
		grid-gap: $grid-gutter-huge;
	}

	// Fixes an issue in Firefox where a block in the grid with 100% height causes the grid to increase in height
	@-moz-document url-prefix() {
		.wp-block-cover {
			max-height: 0;
		}
	}
}

.wp-block-jetpack-layout-grid-column {
	@for $position from 1 through 12 {
		&.grid-column-mobile__start-#{ $position } {
			grid-column-start: $position;
		}

		&.grid-column-mobile__span-#{ $position } {
			grid-column-end: span $position; // Set it to span $i columns, regardless of starting position.
		}
	}

	// Tablet grid rules.
	@media (min-width: #{ ($break-small) }) {
		@for $position from 1 through 12 {
			&.grid-column-tablet__start-#{ $position } {
				grid-column-start: $position;
			}

			&.grid-column-tablet__span-#{ $position } {
				grid-column-end: span $position; // Set it to span $i columns, regardless of starting position.
			}
		}
	}

	// Desktop grid rules.
	@media (min-width: #{ ($break-xlarge) }) {
		@for $position from 1 through 12 {
			&.grid-column-desktop__start-#{ $position } {
				grid-column-start: $position;
			}

			&.grid-column-desktop__span-#{ $position } {
				grid-column-end: span $position; // Set it to span $i columns, regardless of starting position.
			}
		}
	}
}
